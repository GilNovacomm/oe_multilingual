<?php

/**
 * @file
 * Install, update and uninstall functions for the oe_multilingual module.
 */

declare(strict_types = 1);

use Drupal\Core\Language\LanguageInterface;
use Drupal\language\Plugin\LanguageNegotiation\LanguageNegotiationUrl;
use Drupal\language\Plugin\LanguageNegotiation\LanguageNegotiationSelected;
use Drupal\oe_multilingual\Plugin\LanguageNegotiation\LanguageNegotiationAdmin;

/**
 * Implements hook_install().
 */
function oe_multilingual_install() {
  if (\Drupal::isConfigSyncing() === TRUE) {
    // If config is syncing, we do nothing here.
    return;
  }

  // Set up the weight of the English language.
  \Drupal::configFactory()
    ->getEditable('language.entity.en')
    ->set('weight', 6)
    ->save();

  // Disable remote translations downloading from Drupal localisation service.
  // Also make sure that English language is translatable.
  \Drupal::configFactory()
    ->getEditable('locale.settings')
    ->set('translation.import_enabled', FALSE)
    ->set('translate_english', TRUE)
    ->save();

  // Make sure that English language prefix is set to "en".
  \Drupal::configFactory()
    ->getEditable('language.negotiation')
    ->set('url.prefixes.en', 'en')
    ->save();

  // Make sure that Portuguese language prefix is set to "pt".
  \Drupal::configFactory()
    ->getEditable('language.negotiation')
    ->set('url.prefixes.pt-pt', 'pt')
    ->save();

  /** @var \Drupal\oe_multilingual\LanguageNegotiationSetterInterface $setter */
  $setter = \Drupal::service('oe_multilingual.language_negotiation_setter');

  // Set default language negotiation methods.
  $setter->enableNegotiationMethods([
    LanguageInterface::TYPE_INTERFACE,
    LanguageInterface::TYPE_CONTENT,
  ]);

  // For interface negotiation make sure administrative pages are in English.
  $setter->setInterfaceSettings([
    LanguageNegotiationAdmin::METHOD_ID => -20,
    LanguageNegotiationUrl::METHOD_ID => -19,
    LanguageNegotiationSelected::METHOD_ID => 20,
  ]);

  // For content negotiation make sure that content respects URL language.
  $setter->setContentSettings([
    LanguageNegotiationUrl::METHOD_ID => -19,
    LanguageNegotiationSelected::METHOD_ID => 20,
  ]);

  \Drupal::messenger()->addMessage('Please be aware that oe_multilingual makes changes to the following configurations: Language, Locale, Administration language negotiation.');
}

/**
 * Implements hook_update_N().
 *
 * Remove administration_language_negotiation.
 */
function oe_multilingual_update_8001(&$sandbox) {

  $config = \Drupal::configFactory()->getEditable('language.types');
  $language_types = \Drupal::languageManager()->getLanguageTypes();
  foreach ($language_types as $type) {
    $config->clear('negotiation.' . $type . '.enabled.administration-language-negotiation');
  }
  $config->save();

  $module_data = \Drupal::config('core.extension')->get('module');
  unset($module_data['administration_language_negotiation']);
  \Drupal::configFactory()->getEditable('core.extension')->set('module', $module_data)->save();
}
